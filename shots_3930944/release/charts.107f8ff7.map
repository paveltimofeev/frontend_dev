{"version":3,"sources":["scripts\\charts.js"],"names":["colors","solid","transparent","drawChart","elementId","chartOptions","clickOnItemCallback","canvas","ctx","document","getElementById","getContext","Chart","createChartOptions","data","color","min","max","labels","i","length","push","display","ticks","createDashOptions","label","Math","PI","getData","result","random","pink","blue","yellow","green","createSrvChartOptions","datasets","forEach","d","idx","position","getServerData","generateData","offset","parseInt","result1","result2","timestamp","Date","y","t"],"mappings":"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","file":"charts.107f8ff7.map","sourceRoot":"..","sourcesContent":["(function(){\r\n  \r\n  var colors = {\r\n      pink: { solid: 'rgb(215, 50, 93)', transparent: 'rgba(215, 50, 93, 0.1)' },\r\n      blue: { solid: 'rgb(54, 165, 255)', transparent: 'rgba(54, 165, 255, 0.1)' },\r\n      yellow: { solid: 'rgb(254, 255, 55)', transparent: 'rgba(254, 255, 55, 0.1)'  },\r\n      green: { solid: 'rgb(1, 197, 149)', transparent: 'rgba(1, 197, 149, 0.1)' },\r\n  };\r\n\r\n  function drawChart( elementId, chartOptions, clickOnItemCallback ) {\r\n    \r\n      var canvas = document.getElementById( elementId )\r\n      var ctx = canvas.getContext( \"2d\" );\r\n      var chart = new Chart(ctx, chartOptions ); // TODO: DUBLICATES CHART ON CALL drawChart() ANOTHER ONE TIME\r\n  }\r\n\r\n  function createChartOptions( data, color, min, max ) {\r\n      \r\n      var labels = [];\r\n      for(var i=0;i<data.length;i++){ labels.push(i); }\r\n      \r\n      return {\r\n          type: 'line',\r\n          data: {\r\n              labels: labels,\r\n              datasets: [ {\r\n                  data: data,\r\n                  borderColor: color.solid,\r\n                  backgroundColor: color.transparent,\r\n                  lineTension: 0,\r\n                  borderWidth: 1.5,\r\n                  pointRadius: 0\r\n              }]\r\n          },\r\n          options: {\r\n              maintainAspectRatio: false,\r\n              legend : { display : false },\r\n              scales: {\r\n                xAxes: [ { display: false,ticks: { min: 0, max: data.length-1 } } ],\r\n                yAxes: [ { display: false, ticks: {min: min||0, max: max||10} } ]\r\n              }\r\n          }\r\n      };\r\n  }\r\n\r\n  function createSrvChartOptions( data, color, min, max ) {\r\n      \r\n      var labels = [];\r\n      for(var i=0;i<data[0].length;i++){ labels.push(i); }\r\n      \r\n      var datasets = [];\r\n      data.forEach( function( d , idx){\r\n        \r\n        datasets.push( {\r\n              label: \"Server_\" + (idx+1),\r\n              data: d,\r\n              borderColor: color[idx].solid,\r\n              backgroundColor: color[idx].transparent,\r\n              lineTension: 0,\r\n              borderWidth: 1,\r\n              pointRadius: 0\r\n          });\r\n      });\r\n      \r\n      return {\r\n          type: 'line',\r\n          data: {\r\n              datasets: datasets\r\n          },\r\n          options: {\r\n              maintainAspectRatio: false,\r\n              legend : { display : true, position: \"top\" },\r\n              scales: {\r\n                yAxes: [ { \r\n                  display: true,\r\n                  gridLines: {\r\n                        display: true,\r\n                        drawBorder: true,\r\n                        color: \"#383f47\",\r\n                    },\r\n                    \r\n                    color: \"#383f47\",\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawTicks: true,\r\n                    drawOnChartArea: true,\r\n                    offsetGridLines: true\r\n                  } \r\n                ],\r\n                xAxes: [ \r\n                  { \r\n                    display: true, \r\n                    type: \"time\",\r\n                    \r\n                    gridLines: {\r\n                        display: true,\r\n                        drawBorder: true,\r\n                        color: \"#383f47\"\r\n                    },\r\n                    \r\n                    ticks: {},\r\n                    \r\n                    time: {\r\n                        unit: 'minute'\r\n                    },\r\n                    \r\n                    color: \"#383f47\",\r\n                    lineWidth: 1,\r\n                    drawBorder: true,\r\n                    drawTicks: true\r\n                  } \r\n                ]\r\n              }\r\n          }\r\n      };\r\n  }\r\n\r\n  function createDashOptions( data, color, label ) {\r\n      \r\n      return {\r\n          type: 'doughnut',\r\n          data: {\r\n              labels: [label, ''],\r\n              datasets: [ {\r\n                  data: [ data * 100, 100 - data * 100],\r\n                  borderColor_: color.solid,\r\n                  borderColor: [color.solid, '#181c21'],\r\n                  backgroundColor: [color.solid, 'rgba(0, 0, 0, 0)'],\r\n                  lineTension: 0,\r\n                  borderWidth: 1,\r\n                  pointRadius: 0\r\n              }]\r\n          },\r\n          options: {\r\n              maintainAspectRatio: false,\r\n              legend : { display : false },\r\n              cutoutPercentage: 85,\r\n              rotation: Math.PI,\r\n              circumference: 1 * Math.PI\r\n          }\r\n      };\r\n  }\r\n\r\n  \r\n  function getData() {\r\n  \r\n    var result = [];\r\n    for( var i = 0; i< 10;i++){ result.push( Math.random() * 5 + 2 ); }\r\n    return result;\r\n  }\r\n  function getServerData() {\r\n  \r\n    function generateData( offset ) {\r\n      \r\n      return parseInt((Math.random() * 5 + offset) * 10);\r\n    }\r\n    \r\n    var result1 = [];\r\n    var result2 = [];\r\n    var max = 64;\r\n    for( var i = 0; i< max;i++){ \r\n      \r\n      var timestamp = new Date(1530911474 + ( -max + i ) * 60 * 60 * 60);\r\n      result1.push( { y: generateData( 2.5 ), t: timestamp } ); \r\n      result2.push( { y: generateData( 0.5 ), t: timestamp } ); \r\n    }\r\n    \r\n    return [result1, result2];\r\n  }\r\n  \r\n  function run() {\r\n    \r\n    drawChart( \"issues-chart\", createChartOptions( getData(), colors.pink )  );\r\n    drawChart( \"applications-chart\", createChartOptions( getData(), colors.blue )  );\r\n    drawChart( \"checks-chart\", createChartOptions( getData(), colors.yellow)  );\r\n    drawChart( \"databases-chart\", createChartOptions( getData(), colors.green )  );\r\n    \r\n    drawChart( \"server-activity-chart\", createSrvChartOptions( getServerData(), [colors.green, colors.blue] )  );\r\n    \r\n    drawChart( \"server-dash_1\", createDashOptions( 0.5, colors.pink, '% CPU' )  );\r\n    drawChart( \"server-dash_2\", createDashOptions( 0.25, colors.yellow, '% Memory' )  );\r\n    drawChart( \"server-dash_3\", createDashOptions( 0.75, colors.blue, '% Download')  );\r\n    \r\n  }\r\n  \r\n  run();\r\n  \r\n})();\r\n"]}